[{"/Users/anastasiapronina/mesto-app/src/index.js":"1","/Users/anastasiapronina/Desktop/mesto-app/src/index.js":"2","/Users/anastasiapronina/Desktop/mesto-app/src/reportWebVitals.js":"3","/Users/anastasiapronina/Desktop/mesto-app/src/components/App.js":"4","/Users/anastasiapronina/Desktop/mesto-app/src/components/Card.js":"5","/Users/anastasiapronina/Desktop/mesto-app/src/components/ImagePopup.js":"6","/Users/anastasiapronina/Desktop/mesto-app/src/components/PopupWithForm.js":"7","/Users/anastasiapronina/Desktop/mesto-app/src/components/Header.js":"8","/Users/anastasiapronina/Desktop/mesto-app/src/components/Main.js":"9","/Users/anastasiapronina/Desktop/mesto-app/src/components/Footer.js":"10","/Users/anastasiapronina/Desktop/mesto-app/src/utils/api.js":"11"},{"size":500,"mtime":1611433810164,"results":"12","hashOfConfig":"13"},{"size":315,"mtime":1611509145733,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611433810165,"results":"16","hashOfConfig":"15"},{"size":5632,"mtime":1611787647545,"results":"17","hashOfConfig":"15"},{"size":890,"mtime":1611699481926,"results":"18","hashOfConfig":"15"},{"size":701,"mtime":1611789424005,"results":"19","hashOfConfig":"15"},{"size":852,"mtime":1611795885694,"results":"20","hashOfConfig":"15"},{"size":271,"mtime":1611611641267,"results":"21","hashOfConfig":"15"},{"size":2034,"mtime":1611795837648,"results":"22","hashOfConfig":"15"},{"size":192,"mtime":1611508317130,"results":"23","hashOfConfig":"15"},{"size":2480,"mtime":1611606519250,"results":"24","hashOfConfig":"15"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d5t8qt",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e5hhnr",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},"/Users/anastasiapronina/mesto-app/src/index.js",[],"/Users/anastasiapronina/Desktop/mesto-app/src/index.js",[],"/Users/anastasiapronina/Desktop/mesto-app/src/reportWebVitals.js",[],["49","50"],"/Users/anastasiapronina/Desktop/mesto-app/src/components/App.js",[],"/Users/anastasiapronina/Desktop/mesto-app/src/components/Card.js",[],"/Users/anastasiapronina/Desktop/mesto-app/src/components/ImagePopup.js",[],"/Users/anastasiapronina/Desktop/mesto-app/src/components/PopupWithForm.js",[],"/Users/anastasiapronina/Desktop/mesto-app/src/components/Header.js",[],"/Users/anastasiapronina/Desktop/mesto-app/src/components/Main.js",["51"],"/Users/anastasiapronina/Desktop/mesto-app/src/components/Footer.js",[],"/Users/anastasiapronina/Desktop/mesto-app/src/utils/api.js",["52","53"],"import React from \"react\";\n\nclass API {\n    constructor({ baseUrl, headers }) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    _getResponseData(res) {\n        if (!res.ok) {\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n        return res.json();\n    }\n\n    getCards() {\n        return fetch(`${this._baseUrl}/cards`, { headers: this._headers })\n            .then(res => this._getResponseData(res));\n    }\n\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, { headers: this._headers })\n            .then(res => this._getResponseData(res));\n\n    }\n\n    addCard(name, link) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                link: link\n            })\n        })\n            .then(res => this._getResponseData(res));\n    }\n\n    editUserInfo(name, info) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: info\n            })\n        })\n            .then(res => this._getResponseData(res));\n    }\n\n    editUserAvatar(link) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: link\n            })\n        })\n            .then(res => this._getResponseData(res));\n    }\n\n\n    likeCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n            .then(res => this._getResponseData(res));\n    }\n\n\n    unlikeCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(res => this._getResponseData(res));\n    }\n\n\n    deleteCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(res => this._getResponseData(res));\n    }\n\n}\n\nconst api = new API({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-18',\n    headers: {\n        authorization: '9d674f7b-2a9e-4e8a-af7b-88d210976df9',\n        'Content-Type': 'application/json'\n    }\n})\n\n\nexport default api;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":26,"column":17,"nodeType":"60","endLine":30,"endColumn":19},{"ruleId":"61","severity":1,"message":"62","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"61","severity":1,"message":"65","line":91,"column":7,"nodeType":"63","messageId":"64","endLine":91,"endColumn":10},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'api' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]